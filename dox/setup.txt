[ GitHub repo: https://github.com/dindians/micro-frontend-monorepo ]
https://angular.io/guide/file-structure#multiple-projects
https://www.angulararchitects.io/blog/
https://www.angulararchitects.io/aktuelles/dynamic-module-federation-with-angular/
https://www.angulararchitects.io/aktuelles/dynamic-module-federation-with-angular-2/
https://github.com/manfredsteyer/module-federation-with-angular-dynamic-workflow-designer

sustainable angular-architectures with monorepos and strategic domain-driven design
https://www.youtube.com/watch?v=hVHqGT5U5rA

free eBook: https://angulararchitects.io/book
https://www.ng-conf.org/
podcast https://ng-show

webpack module federation
https://webpack.js.org/concepts/module-federation/


use a "monorepo" development style, with a single repository and global configuration for all Angular projects.
steps to create a multi-project workspace

1. create new workspace for the monorepository (skip the initial skeleton application at the root level)
  ng new micro-frontend-monorepo --create-application false
2. create the host and micro frontend projects
  cd micro-frontend-monorepo
  ng application host --routing --style=scss
  ng application mfe1 --routing --style=scss
3. create the shared log-message library project
  ng g lib log-messages
4. create the shared log message model library project
  ng g lib log-message-model
5. add start commands for host and mfe1 project to package.json
  "scripts": {
    ...
    "start:host": "ng serve --project host --port 4000",
    "start:mfe1": "ng serve --project mfe1 --port 4001",
    ...
  }
6. install angular material (material.angular.io)
  ng add @angular/material
7. install angular ngrx store w/ dev-tools
  ng add @ngrx/store
  ng add @ngrx/store-devtools
8. install angular module federation
  ng add @angular-architects/module-federation
  Note:
  install module federation in the host project (port 4000) and the mfe1 project (port 4001)

https://fonts.google.com/icons?selected=Material+Icons
